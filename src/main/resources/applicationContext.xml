<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 비즈니스 영역의 빈생성 및 필드 주입 처리 -->
	<!-- @Component 어노테이션 설정된 클래스 객체 생성 및 주입 -->
	<context:component-scan
		base-package="com.odi.biz"></context:component-scan>

	<!-- ============================================ -->
	<!-- Spring JDBC 관련 설정 -->
	<!-- DataSource 설정 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="oracle.jdbc.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@203.236.209.172:1521:xe" />
		<property name="username" value="OdiMarket" />
		<property name="password" value="1234" />
	</bean>

	<!-- 스프링 JDBC : JdbcTemplate 객체 생성 설정 -->
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- ========================== -->
	<!-- ========================== -->
	<!-- 스프링-마이바티스 연동설정 -->
	<!-- 방법1 : SqlSessionDaoSupport 상속구현 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
	</bean>

	<!-- 방법 2 : SqlSessionTemplate 사용 -->
	<!-- SqlSessionFactoryBean 객체를 주입 받아서 사용 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"></constructor-arg>
	</bean>


	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅 -->
	<bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<constructor-arg
			value="112107668673-pmmd3611vdqhcsfsd6ot71ktl686ja9r.apps.googleusercontent.com" />
		<constructor-arg value="TxEoeV5gDw4FcBHvjNrDBIR-" />
	</bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<bean id="googleOAuth2Parameters"
		class="org.springframework.social.oauth2.OAuth2Parameters">
		<!-- <property name="scope" value="https://www.googleapis.com/auth/plus.login" 
			/> -->
		<property name="scope"
			value="https://www.googleapis.com/auth/plus.login  https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile" />
		<property name="redirectUri"
			value="http://localhost:8080/odi/user/google/callback.do" />
	</bean>

	<!-- 웹소켓 사용
	<websocket:handlers>
		<websocket:mapping path="/count" handler="myHandler" />
	</websocket:handlers>
	 -->

	<!-- 웹 소켓 핸들러 
	<bean id="myHandler" class="com.odi.biz.socket.WebSocketHandler" />
	-->
	<!-- <bean class="org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean"> 
		<property name="maxTextMessageBufferSize" value="8192" /> <property name="maxBinaryMessageBufferSize" 
		value="8192" /> </bean> -->

	<!-- 메일보내기 -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="odimarket.bit@gmail.com" />
		<property name="password" value="odi_1234" />

		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
</beans>
